if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=new URL(".",import.meta.url).pathname.slice(import.meta.url.match(/^file:\/\/\/\w:/)?1:0,-1)+"/";var e={};var t=undefined&&undefined.__createBinding||(Object.create?function(e,t,n,a){if(a===undefined)a=n;var o=Object.getOwnPropertyDescriptor(t,n);if(!o||("get"in o?!t.__esModule:o.writable||o.configurable)){o={enumerable:true,get:function(){return t[n]}}}Object.defineProperty(e,a,o)}:function(e,t,n,a){if(a===undefined)a=n;e[a]=t[n]});var n=undefined&&undefined.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var a=undefined&&undefined.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var o in e)if(o!=="default"&&Object.prototype.hasOwnProperty.call(e,o))t(a,e,o);n(a,e);return a};var o=undefined&&undefined.__awaiter||function(e,t,n,a){function adopt(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,o){function fulfilled(e){try{step(a.next(e))}catch(e){o(e)}}function rejected(e){try{step(a["throw"](e))}catch(e){o(e)}}function step(e){e.done?n(e.value):adopt(e.value).then(fulfilled,rejected)}step((a=a.apply(e,t||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:true});const r=a(require("@actions/core"));const c=a(require("@actions/github"));const i=require("@google-cloud/storage");const d=require("tmp-promise");const u=require("./inputs");const s=require("./state");const l=require("./tar-utils");function getBestMatch(e,t,n){return o(this,void 0,void 0,(function*(){const a=`${c.context.repo.owner}/${c.context.repo.repo}`;r.debug(`Will lookup for the file ${a}/${t}.tar`);const o=e.file(`${a}/${t}.tar`);const[i]=yield o.exists().catch((e=>{r.error("Failed to check if an exact match exists");throw e}));r.debug(`Exact file name: ${o.name}.`);if(i){console.log(`🙌 Found exact match from cache for key '${t}'.`);return[o,"exact"]}console.log(`🔸 No exact match found for key '${t}'.`);const d=yield e.getFiles({prefix:`${a}/${n[n.length-1]}`}).then((([e])=>e.sort(((e,t)=>new Date(t.metadata.updated).getTime()-new Date(e.metadata.updated).getTime())))).catch((e=>{r.error("Failed to list cache candidates");throw e}));if(r.isDebug()){r.debug(`Candidates: ${JSON.stringify(d.map((e=>({name:e.name,metadata:{updated:e.metadata.updated}}))))}.`)}for(const e of n){const t=d.find((t=>t.name.startsWith(`${a}/${e}`)));if(t){console.log(`🤝 Found match from cache for restore key '${e}'.`);return[t,"partial"]}console.log(`🔸 No cache candidate found for restore key '${e}'.`)}return[null,"none"]}))}function main(){return o(this,void 0,void 0,(function*(){var e,t;const n=(0,u.getInputs)();const a=(new i.Storage).bucket(n.bucket);const f=`${c.context.repo.owner}/${c.context.repo.repo}`;const h=`${f}/${n.key}.tar`;const[p,m]=yield r.group("🔍 Searching the best cache archive available",(()=>getBestMatch(a,n.key,n.restoreKeys)));r.debug(`Best match kind: ${m}.`);if(!p){(0,s.saveState)({bucket:n.bucket,path:n.path,cacheHitKind:"none",targetFileName:h});r.setOutput("cache-hit","false");console.log("😢 No cache candidate found.");return}r.debug(`Best match name: ${p.name}.`);const g=yield p.getMetadata().then((([e])=>e)).catch((e=>{r.error("Failed to read object metadatas");throw e}));r.debug(`Best match metadata: ${JSON.stringify(g)}.`);const v=(e=g===null||g===void 0?void 0:g.metadata)===null||e===void 0?void 0:e["Cache-Action-Compression-Method"];r.debug(`Best match compression method: ${v}.`);if(!g||!v){(0,s.saveState)({bucket:n.bucket,path:n.path,cacheHitKind:"none",targetFileName:h});r.setOutput("cache-hit","false");console.log("😢 No cache candidate found (missing metadata).");return}const b=(t=process.env.GITHUB_WORKSPACE)!==null&&t!==void 0?t:process.cwd();return(0,d.withFile)((e=>o(this,void 0,void 0,(function*(){yield r.group("🌐 Downloading cache archive from bucket",(()=>o(this,void 0,void 0,(function*(){console.log(`🔹 Downloading file '${p.name}'...`);return p.download({destination:e.path})})))).catch((e=>{r.error("Failed to download the file");throw e}));yield r.group("🗜️ Extracting cache archive",(()=>(0,l.extractTar)(e.path,v,b))).catch((e=>{r.error("Failed to extract the archive");throw e}));(0,s.saveState)({path:n.path,bucket:n.bucket,cacheHitKind:m,targetFileName:h});r.setOutput("cache-hit",m==="exact");console.log("✅ Successfully restored cache.")}))))}))}void main().catch((e=>{r.error(e);r.setFailed(e)}));